// Generated by view binder compiler. Do not edit!
package com.smartglass.smartglassapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smartglass.smartglassapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBluetoothBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bleConnect;

  @NonNull
  public final Button bluetoothPermissions;

  @NonNull
  public final Button disconnect;

  @NonNull
  public final Button locationPermissions;

  @NonNull
  public final RecyclerView scanResultsRecyclerView;

  @NonNull
  public final TextView textView;

  private ActivityBluetoothBinding(@NonNull ConstraintLayout rootView, @NonNull Button bleConnect,
      @NonNull Button bluetoothPermissions, @NonNull Button disconnect,
      @NonNull Button locationPermissions, @NonNull RecyclerView scanResultsRecyclerView,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.bleConnect = bleConnect;
    this.bluetoothPermissions = bluetoothPermissions;
    this.disconnect = disconnect;
    this.locationPermissions = locationPermissions;
    this.scanResultsRecyclerView = scanResultsRecyclerView;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBluetoothBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBluetoothBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bluetooth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBluetoothBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ble_connect;
      Button bleConnect = ViewBindings.findChildViewById(rootView, id);
      if (bleConnect == null) {
        break missingId;
      }

      id = R.id.bluetooth_permissions;
      Button bluetoothPermissions = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothPermissions == null) {
        break missingId;
      }

      id = R.id.disconnect;
      Button disconnect = ViewBindings.findChildViewById(rootView, id);
      if (disconnect == null) {
        break missingId;
      }

      id = R.id.location_permissions;
      Button locationPermissions = ViewBindings.findChildViewById(rootView, id);
      if (locationPermissions == null) {
        break missingId;
      }

      id = R.id.scan_results_recycler_view;
      RecyclerView scanResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (scanResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityBluetoothBinding((ConstraintLayout) rootView, bleConnect,
          bluetoothPermissions, disconnect, locationPermissions, scanResultsRecyclerView, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
